<?xml version="1.0" encoding="utf-8"?>
<Test>
<Name>indexing duplicated attributes</Name>

<requires>
<!-- this test checks on_file_field_error behavior which is basically indexer-only -->
<non-rt/>
</requires>

<Config>
indexer
{
	mem_limit			= 16M
}

searchd
{
<Searchd_Settings/>
}

source srctest
{
	type			= mysql
<Sql_Settings/>

	sql_query = SELECT * FROM test_table
	sql_attr_uint = idd
	sql_attr_uint	= base_len
	
	<dynamic>
	<variant>sql_attr_multi = uint BASE_LEN from query; SELECT id, BASE_LEN FROM test_table1</variant>
	<variant>sql_attr_multi = uint base_len1 from query; SELECT id, base_len1 FROM test_table1</variant>
	</dynamic>
}

index test_idx
{
	source			= srctest
	path			= <Data_Path/>/test
}

</Config>
<DB_Create>
CREATE TABLE test_table
(
	id INTEGER NOT NULL,
	idd INTEGER NOT NULL,
	base_len INTEGER NOT NULL,
	title VARCHAR(255) NOT NULL
)
</DB_Create>
<DB_Drop>DROP TABLE IF EXISTS `test_table`</DB_Drop>
<DB_Insert>
INSERT INTO `test_table` VALUES
( 1, 10, 11, 'on all' ),
( 2, 20, 12, 'on none' ),
( 3, 30, 13, 'on empty' ),
( 4, 40, 14, 'on empty' )
</DB_Insert>

<DB_Create>
CREATE TABLE test_table1
(
	id INTEGER NOT NULL,
	BASE_LEN INTEGER NOT NULL,
	base_len1 INTEGER NOT NULL
)
</DB_Create>
<DB_Drop>DROP TABLE IF EXISTS `test_table1`</DB_Drop>
<DB_Insert>
INSERT INTO `test_table1` VALUES
( 1, 101, 111 ),
( 2, 102, 112 ),
( 3, 103, 113 ),
( 4, 104, 114 )
</DB_Insert>

<sphqueries>
<sphinxql>SELECT * FROM test_idx</sphinxql>
</sphqueries>

</Test>
